diff -r 0c2c5365d46c mobile/android/android-components/.buildconfig.yml
--- a/mobile/android/android-components/.buildconfig.yml	Mon Jul 15 14:24:25 2024 +0000
+++ b/mobile/android/android-components/.buildconfig.yml	Sun Jul 21 19:05:28 2024 +0000
@@ -1593,16 +1593,6 @@
     - support-base
     - support-test
     - tooling-lint
-  lib-push-firebase:
-    description: An implementation of concept-push for the Firebase Message Service.
-    path: components/lib/push-firebase
-    publish: true
-    upstream_dependencies:
-    - concept-base
-    - concept-push
-    - support-base
-    - support-test
-    - tooling-lint
   lib-state:
     description: A library for maintaining application state.
     path: components/lib/state
diff -r 0c2c5365d46c mobile/android/android-components/plugins/dependencies/src/main/java/DependenciesPlugin.kt
--- a/mobile/android/android-components/plugins/dependencies/src/main/java/DependenciesPlugin.kt	Mon Jul 15 14:24:25 2024 +0000
+++ b/mobile/android/android-components/plugins/dependencies/src/main/java/DependenciesPlugin.kt	Sat Jul 20 12:12:54 2024 +0000
@@ -90,12 +90,9 @@
     }
 
     object Firebase {
-        const val messaging = "24.0.0"
     }
 
     object Google {
-        const val play_review = "2.0.1"
-        const val play_services = "18.4.0"
     }
 }
 
@@ -219,9 +216,4 @@
     const val thirdparty_disklrucache = "com.jakewharton:disklrucache:${Versions.disklrucache}"
     const val thirdparty_androidsvg = "com.caverock:androidsvg-aar:${Versions.androidsvg}"
 
-    const val firebase_messaging = "com.google.firebase:firebase-messaging:${Versions.Firebase.messaging}"
-
-    const val play_review = "com.google.android.play:review:${Versions.Google.play_review}"
-    const val play_review_ktx = "com.google.android.play:review-ktx:${Versions.Google.play_review}"
-    const val play_services_base = "com.google.android.gms:play-services-base:${Versions.Google.play_services}"
 }
diff -r 0c2c5365d46c mobile/android/fenix/.buildconfig.yml
--- a/mobile/android/fenix/.buildconfig.yml	Mon Jul 15 14:24:25 2024 +0000
+++ b/mobile/android/fenix/.buildconfig.yml	Sun Jul 21 19:05:28 2024 +0000
@@ -63,7 +63,6 @@
     - lib-crash-sentry
     - lib-dataprotect
     - lib-publicsuffixlist
-    - lib-push-firebase
     - lib-state
     - service-contile
     - service-digitalassetlinks
diff -r 0c2c5365d46c mobile/android/fenix/app/build.gradle
--- a/mobile/android/fenix/app/build.gradle	Mon Jul 15 14:24:25 2024 +0000
+++ b/mobile/android/fenix/app/build.gradle	Sat Jul 20 12:12:54 2024 +0000
@@ -643,7 +643,6 @@
 
     implementation project(':lib-crash')
     implementation project(':lib-crash-sentry')
-    implementation project(':lib-push-firebase')
     implementation project(':lib-state')
     implementation project(':lib-dataprotect')
     testImplementation project(':support-test-fakes')
@@ -687,15 +686,8 @@
     implementation FenixDependencies.protobuf_javalite
     implementation ComponentsDependencies.google_material
 
-    implementation FenixDependencies.adjust
-    implementation FenixDependencies.installreferrer // Required by Adjust
-
     implementation FenixDependencies.google_ads_id // Required for the Google Advertising ID
 
-    // Required for in-app reviews
-    implementation ComponentsDependencies.play_review
-    implementation ComponentsDependencies.play_review_ktx
-
     implementation FenixDependencies.androidx_profileinstaller
 
     androidTestImplementation ComponentsDependencies.androidx_test_uiautomator
diff -r 0c2c5365d46c mobile/android/fenix/app/proguard-rules.pro
--- a/mobile/android/fenix/app/proguard-rules.pro	Mon Jul 15 14:24:25 2024 +0000
+++ b/mobile/android/fenix/app/proguard-rules.pro	Sat Jul 20 12:12:54 2024 +0000
@@ -1,23 +1,6 @@
 -dontobfuscate
 
 ####################################################################################################
-# Sentry
-####################################################################################################
-
-# Recommended config via https://docs.sentry.io/clients/java/modules/android/#manual-integration
-# Since we don't obfuscate, we don't need to use their Gradle plugin to upload ProGuard mappings.
--keepattributes LineNumberTable,SourceFile
--dontwarn org.slf4j.**
--dontwarn javax.**
-
-# Our addition: this class is saved to disk via Serializable, which ProGuard doesn't like.
-# If we exclude this, upload silently fails (Sentry swallows a NPE so we don't crash).
-# I filed https://github.com/getsentry/sentry-java/issues/572
-#
-# If Sentry ever mysteriously stops working after we upgrade it, this could be why.
--keep class io.sentry.event.Event { *; }
-
-####################################################################################################
 # Android and GeckoView built-ins
 ####################################################################################################
 
@@ -69,58 +52,6 @@
 
 -keep class org.mozilla.fenix.**ViewModel { *; }
 
-####################################################################################################
-# Adjust
-####################################################################################################
-
--keep public class com.adjust.sdk.** { *; }
--keep class com.google.android.gms.common.ConnectionResult {
-    int SUCCESS;
-}
--keep class com.google.android.gms.ads.identifier.AdvertisingIdClient {
-    com.google.android.gms.ads.identifier.AdvertisingIdClient$Info getAdvertisingIdInfo(android.content.Context);
-}
--keep class com.google.android.gms.ads.identifier.AdvertisingIdClient$Info {
-    java.lang.String getId();
-    boolean isLimitAdTrackingEnabled();
-}
--keep public class com.android.installreferrer.** { *; }
--keep class dalvik.system.VMRuntime {
-    java.lang.String getRuntime();
-}
--keep class android.os.Build {
-    java.lang.String[] SUPPORTED_ABIS;
-    java.lang.String CPU_ABI;
-}
--keep class android.content.res.Configuration {
-    android.os.LocaledList getLocales();
-    java.util.Locale locale;
-}
--keep class android.os.LocaleList {
-    java.util.Locale get(int);
-}
-
-# Keep code generated from Glean Metrics
--keep class org.mozilla.fenix.GleanMetrics.** {  *; }
-
-# Keep motionlayout internal methods
-# https://github.com/mozilla-mobile/fenix/issues/2094
--keep class androidx.constraintlayout.** { *; }
-
-# Keep adjust relevant classes
--keep class com.adjust.sdk.** { *; }
--keep class com.google.android.gms.common.ConnectionResult {
-    int SUCCESS;
-}
--keep class com.google.android.gms.ads.identifier.AdvertisingIdClient {
-    com.google.android.gms.ads.identifier.AdvertisingIdClient$Info getAdvertisingIdInfo(android.content.Context);
-}
--keep class com.google.android.gms.ads.identifier.AdvertisingIdClient$Info {
-    java.lang.String getId();
-    boolean isLimitAdTrackingEnabled();
-}
--keep public class com.android.installreferrer.** { *; }
-
 # Keep Android Lifecycle methods
 # https://bugzilla.mozilla.org/show_bug.cgi?id=1596302
 -keep class androidx.lifecycle.** { *; }
@@ -130,3 +61,11 @@
 -dontwarn java.beans.IntrospectionException
 -dontwarn java.beans.Introspector
 -dontwarn java.beans.PropertyDescriptor
+
+####################################################################################################
+# Checker Framework
+####################################################################################################
+
+-dontwarn org.checkerframework.checker.nullness.qual.EnsuresNonNull
+-dontwarn org.checkerframework.checker.nullness.qual.EnsuresNonNullIf
+-dontwarn org.checkerframework.checker.nullness.qual.RequiresNonNull
diff -r 0c2c5365d46c mobile/android/fenix/app/src/main/java/com/adjust/sdk/Adjust.java
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/mobile/android/fenix/app/src/main/java/com/adjust/sdk/Adjust.java	Sat Jul 20 12:12:54 2024 +0000
@@ -0,0 +1,47 @@
+/*
+ * Copyright (c) 2012-2017 adjust GmbH,
+ * http://www.adjust.com
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining
+ * a copy of this software and associated documentation files (the
+ * "Software"), to deal in the Software without restriction, including
+ * without limitation the rights to use, copy, modify, merge, publish,
+ * distribute, sublicense, and/or sell copies of the Software, and to
+ * permit persons to whom the Software is furnished to do so, subject to
+ * the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be
+ * included in all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
+ * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
+ * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
+ * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
+ * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
+ * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
+ * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.adjust.sdk;
+
+import android.content.Context;
+
+public class Adjust {
+    public static void onCreate(AdjustConfig adjustConfig) {
+    }
+
+    public static void trackEvent(AdjustEvent event) {
+    }
+
+    public static void onResume() {
+    }
+
+    public static void onPause() {
+    }
+
+    public static void setEnabled(boolean enabled) {
+    }
+
+    public static void gdprForgetMe(final Context context) {
+    }
+}
diff -r 0c2c5365d46c mobile/android/fenix/app/src/main/java/com/adjust/sdk/AdjustAttribution.java
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/mobile/android/fenix/app/src/main/java/com/adjust/sdk/AdjustAttribution.java	Sat Jul 20 12:12:54 2024 +0000
@@ -0,0 +1,49 @@
+/*
+ * Copyright (c) 2012-2017 adjust GmbH,
+ * http://www.adjust.com
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining
+ * a copy of this software and associated documentation files (the
+ * "Software"), to deal in the Software without restriction, including
+ * without limitation the rights to use, copy, modify, merge, publish,
+ * distribute, sublicense, and/or sell copies of the Software, and to
+ * permit persons to whom the Software is furnished to do so, subject to
+ * the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be
+ * included in all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
+ * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
+ * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
+ * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
+ * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
+ * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
+ * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.adjust.sdk;
+
+import java.io.Serializable;
+
+public class AdjustAttribution implements Serializable {
+    public String network;
+    public String campaign;
+    public String adgroup;
+    public String creative;
+
+    @Override
+    public boolean equals(Object other) {
+        return false;
+    }
+
+    @Override
+    public int hashCode() {
+        return 0;
+    }
+
+    @Override
+    public String toString() {
+        return "";
+    }
+}
diff -r 0c2c5365d46c mobile/android/fenix/app/src/main/java/com/adjust/sdk/AdjustConfig.java
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/mobile/android/fenix/app/src/main/java/com/adjust/sdk/AdjustConfig.java	Sat Jul 20 12:12:54 2024 +0000
@@ -0,0 +1,49 @@
+/*
+ * Copyright (c) 2012-2017 adjust GmbH,
+ * http://www.adjust.com
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining
+ * a copy of this software and associated documentation files (the
+ * "Software"), to deal in the Software without restriction, including
+ * without limitation the rights to use, copy, modify, merge, publish,
+ * distribute, sublicense, and/or sell copies of the Software, and to
+ * permit persons to whom the Software is furnished to do so, subject to
+ * the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be
+ * included in all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
+ * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
+ * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
+ * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
+ * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
+ * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
+ * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.adjust.sdk;
+
+import android.content.Context;
+
+import java.util.List;
+
+public class AdjustConfig {
+    public static final String ENVIRONMENT_SANDBOX = "sandbox";
+    public static final String ENVIRONMENT_PRODUCTION = "production";
+
+    public AdjustConfig(Context context, String appToken, String environment) {
+    }
+
+    public AdjustConfig(Context context, String appToken, String environment, boolean allowSuppressLogLevel) {
+    }
+
+    public void setOnAttributionChangedListener(OnAttributionChangedListener onAttributionChangedListener) {
+    }
+
+    public void setPreinstallTrackingEnabled(boolean preinstallTrackingEnabled) {
+    }
+
+    public void setLogLevel(LogLevel logLevel) {
+    }
+}
diff -r 0c2c5365d46c mobile/android/fenix/app/src/main/java/com/adjust/sdk/AdjustEvent.java
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/mobile/android/fenix/app/src/main/java/com/adjust/sdk/AdjustEvent.java	Sat Jul 20 12:12:54 2024 +0000
@@ -0,0 +1,31 @@
+package com.adjust.sdk;
+
+/**
+ * Created by pfms on 05/11/14.
+ */
+public class AdjustEvent {
+
+    public AdjustEvent(String eventToken) {
+    }
+
+    public void setRevenue(double revenue, String currency) {
+    }
+
+    public void addCallbackParameter(String key, String value) {
+    }
+
+    public void addPartnerParameter(String key, String value) {
+    }
+
+    public void setOrderId(String orderId) {
+    }
+
+    public void setCallbackId(String callbackId) {
+    }
+
+    public void setProductId(String productId) {
+    }
+
+    public void setPurchaseToken(String purchaseToken) {
+    }
+}
diff -r 0c2c5365d46c mobile/android/fenix/app/src/main/java/com/adjust/sdk/Constants.java
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/mobile/android/fenix/app/src/main/java/com/adjust/sdk/Constants.java	Sat Jul 20 12:12:54 2024 +0000
@@ -0,0 +1,18 @@
+//
+//  Constants.java
+//  Adjust
+//
+//  Created by keyboardsurfer on 2013-11-08.
+//  Copyright (c) 2012-2014 adjust GmbH. All rights reserved.
+//  See the file MIT-LICENSE for copying permission.
+//
+
+package com.adjust.sdk;
+
+/**
+ * @author keyboardsurfer
+ * @since 8.11.13
+ */
+public interface Constants {
+    String ADJUST_PREINSTALL_SYSTEM_PROPERTY_PATH = "adjust.preinstall.path";
+}
diff -r 0c2c5365d46c mobile/android/fenix/app/src/main/java/com/adjust/sdk/LogLevel.java
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/mobile/android/fenix/app/src/main/java/com/adjust/sdk/LogLevel.java	Sat Jul 20 12:12:54 2024 +0000
@@ -0,0 +1,43 @@
+/*
+ * Copyright (c) 2012-2017 adjust GmbH,
+ * http://www.adjust.com
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining
+ * a copy of this software and associated documentation files (the
+ * "Software"), to deal in the Software without restriction, including
+ * without limitation the rights to use, copy, modify, merge, publish,
+ * distribute, sublicense, and/or sell copies of the Software, and to
+ * permit persons to whom the Software is furnished to do so, subject to
+ * the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be
+ * included in all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
+ * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
+ * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
+ * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
+ * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
+ * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
+ * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.adjust.sdk;
+
+import android.util.Log;
+
+/**
+ * Created by pfms on 11/03/15.
+ */
+public enum LogLevel {
+    VERBOSE(Log.VERBOSE), DEBUG(Log.DEBUG), INFO(Log.INFO), WARN(Log.WARN), ERROR(Log.ERROR), ASSERT(Log.ASSERT), SUPRESS(8);
+    final int androidLogLevel;
+
+    LogLevel(final int androidLogLevel) {
+        this.androidLogLevel = androidLogLevel;
+    }
+
+    public int getAndroidLogLevel() {
+        return androidLogLevel;
+    }
+}
diff -r 0c2c5365d46c mobile/android/fenix/app/src/main/java/com/adjust/sdk/OnAttributionChangedListener.java
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/mobile/android/fenix/app/src/main/java/com/adjust/sdk/OnAttributionChangedListener.java	Sat Jul 20 12:12:54 2024 +0000
@@ -0,0 +1,29 @@
+/*
+ * Copyright (c) 2012-2017 adjust GmbH,
+ * http://www.adjust.com
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining
+ * a copy of this software and associated documentation files (the
+ * "Software"), to deal in the Software without restriction, including
+ * without limitation the rights to use, copy, modify, merge, publish,
+ * distribute, sublicense, and/or sell copies of the Software, and to
+ * permit persons to whom the Software is furnished to do so, subject to
+ * the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be
+ * included in all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
+ * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
+ * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
+ * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
+ * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
+ * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
+ * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.adjust.sdk;
+
+public interface OnAttributionChangedListener {
+    void onAttributionChanged(AdjustAttribution attribution);
+}
diff -r 0c2c5365d46c mobile/android/fenix/app/src/main/java/com/google/firebase/messaging/FirebaseMessagingService.java
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/mobile/android/fenix/app/src/main/java/com/google/firebase/messaging/FirebaseMessagingService.java	Sat Jul 20 12:12:54 2024 +0000
@@ -0,0 +1,42 @@
+// Copyright 2020 Google LLC
+//
+// Licensed under the Apache License, Version 2.0 (the "License");
+// you may not use this file except in compliance with the License.
+// You may obtain a copy of the License at
+//
+//      http://www.apache.org/licenses/LICENSE-2.0
+//
+// Unless required by applicable law or agreed to in writing, software
+// distributed under the License is distributed on an "AS IS" BASIS,
+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+// See the License for the specific language governing permissions and
+// limitations under the License.
+package com.google.firebase.messaging;
+
+import android.app.Service;
+import android.content.Intent;
+import android.os.Binder;
+import android.os.IBinder;
+
+public class FirebaseMessagingService extends Service {
+
+    private final IBinder mBinder = new Binder();
+
+    public void onMessageReceived(RemoteMessage message) {
+    }
+
+    public void onMessageSent(String msgId) {
+    }
+
+    public void onNewToken(String token) {
+    }
+
+    public void onSendError(String msgId, Exception exception) {
+    }
+
+    @Override
+    public IBinder onBind(Intent intent) {
+        return mBinder;
+    }
+
+}
diff -r 0c2c5365d46c mobile/android/fenix/app/src/main/java/com/google/firebase/messaging/RemoteMessage.java
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/mobile/android/fenix/app/src/main/java/com/google/firebase/messaging/RemoteMessage.java	Sat Jul 20 12:12:54 2024 +0000
@@ -0,0 +1,33 @@
+// Copyright 2020 Google LLC
+//
+// Licensed under the Apache License, Version 2.0 (the "License");
+// you may not use this file except in compliance with the License.
+// You may obtain a copy of the License at
+//
+//      http://www.apache.org/licenses/LICENSE-2.0
+//
+// Unless required by applicable law or agreed to in writing, software
+// distributed under the License is distributed on an "AS IS" BASIS,
+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+// See the License for the specific language governing permissions and
+// limitations under the License.
+package com.google.firebase.messaging;
+
+import android.os.Parcel;
+import android.os.Parcelable;
+import java.util.Map;
+
+public class RemoteMessage implements Parcelable {
+
+    public int describeContents() {
+        return 0;
+    }
+
+    public void writeToParcel(Parcel out, int flags) {
+    }
+
+    public Map<String, String> getData() {
+        return null;
+    }
+
+}
diff -r 0c2c5365d46c mobile/android/fenix/app/src/main/java/mozilla/components/lib/push/firebase/AbstractFirebasePushService.kt
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/mobile/android/fenix/app/src/main/java/mozilla/components/lib/push/firebase/AbstractFirebasePushService.kt	Sat Jul 20 12:12:54 2024 +0000
@@ -0,0 +1,32 @@
+/* This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
+
+package mozilla.components.lib.push.firebase
+
+import android.content.Context
+import com.google.firebase.messaging.FirebaseMessagingService
+import com.google.firebase.messaging.RemoteMessage
+import mozilla.components.concept.push.PushService
+
+abstract class AbstractFirebasePushService() : FirebaseMessagingService(), PushService {
+
+    override fun start(context: Context) {
+    }
+
+    override fun onNewToken(newToken: String) {
+    }
+
+    override fun onMessageReceived(remoteMessage: RemoteMessage?) {
+    }
+
+    final override fun stop() {
+    }
+
+    override fun deleteToken() {
+    }
+
+    override fun isServiceAvailable(context: Context): Boolean {
+        return false
+    }
+}
diff -r 0c2c5365d46c mobile/android/fenix/app/src/main/java/org/mozilla/fenix/FeatureFlags.kt
--- a/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/FeatureFlags.kt	Mon Jul 15 14:24:25 2024 +0000
+++ b/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/FeatureFlags.kt	Sat Jul 20 12:12:54 2024 +0000
@@ -18,7 +18,7 @@
      * This feature does not only depend on this flag. It requires the AMO collection override to
      * be enabled which is behind the Secret Settings.
      * */
-    val customExtensionCollectionFeature = Config.channel.isNightlyOrDebug || Config.channel.isBeta
+    val customExtensionCollectionFeature = true
 
     /**
      * Pull-to-refresh allows you to pull the web content down far enough to have the page to
@@ -37,7 +37,7 @@
     fun isPocketRecommendationsFeatureEnabled(context: Context): Boolean {
         val langTag = LocaleManager.getCurrentLocale(context)
             ?.toLanguageTag() ?: getSystemDefault().toLanguageTag()
-        return listOf("en-US", "en-CA").contains(langTag)
+        return false && listOf("en-US", "en-CA").contains(langTag)
     }
 
     /**
diff -r 0c2c5365d46c mobile/android/fenix/app/src/main/java/org/mozilla/fenix/browser/BaseBrowserFragment.kt
--- a/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/browser/BaseBrowserFragment.kt	Mon Jul 15 14:24:25 2024 +0000
+++ b/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/browser/BaseBrowserFragment.kt	Sat Jul 20 12:12:54 2024 +0000
@@ -947,19 +947,16 @@
             view = view,
         )
 
-        // This component feature only works on Fenix when built on Mozilla infrastructure.
-        if (BuildConfig.MOZILLA_OFFICIAL) {
-            webAuthnFeature.set(
-                feature = WebAuthnFeature(
-                    engine = requireComponents.core.engine,
-                    activity = requireActivity(),
-                    exitFullScreen = requireComponents.useCases.sessionUseCases.exitFullscreen::invoke,
-                    currentTab = { store.state.selectedTabId },
-                ),
-                owner = this,
-                view = view,
-            )
-        }
+        webAuthnFeature.set(
+            feature = WebAuthnFeature(
+                engine = requireComponents.core.engine,
+                activity = requireActivity(),
+                exitFullScreen = requireComponents.useCases.sessionUseCases.exitFullscreen::invoke,
+                currentTab = { store.state.selectedTabId },
+            ),
+            owner = this,
+            view = view,
+        )
 
         screenOrientationFeature.set(
             feature = ScreenOrientationFeature(
diff -r 0c2c5365d46c mobile/android/fenix/app/src/main/java/org/mozilla/fenix/components/Components.kt
--- a/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/components/Components.kt	Mon Jul 15 14:24:25 2024 +0000
+++ b/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/components/Components.kt	Sat Jul 20 12:12:54 2024 +0000
@@ -10,7 +10,6 @@
 import androidx.compose.runtime.Composable
 import androidx.compose.ui.platform.LocalContext
 import androidx.core.app.NotificationManagerCompat
-import com.google.android.play.core.review.ReviewManagerFactory
 import mozilla.components.feature.addons.AddonManager
 import mozilla.components.feature.addons.amo.AMOAddonsProvider
 import mozilla.components.feature.addons.migration.DefaultSupportedAddonsChecker
@@ -172,7 +171,6 @@
 
     val reviewPromptController by lazyMonitored {
         ReviewPromptController(
-            manager = ReviewManagerFactory.create(context),
             reviewSettings = FenixReviewSettings(settings),
         )
     }
diff -r 0c2c5365d46c mobile/android/fenix/app/src/main/java/org/mozilla/fenix/components/Core.kt
--- a/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/components/Core.kt	Mon Jul 15 14:24:25 2024 +0000
+++ b/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/components/Core.kt	Sat Jul 20 12:12:54 2024 +0000
@@ -538,8 +538,14 @@
                 } else {
                     defaultTopSites.add(
                         Pair(
-                            context.getString(R.string.default_top_site_google),
-                            SupportUtils.GOOGLE_URL,
+                            context.getString(R.string.default_top_site_fdroid),
+                            SupportUtils.FDROID_URL,
+                        ),
+                    )
+                    defaultTopSites.add(
+                        Pair(
+                            context.getString(R.string.default_top_site_eff),
+                            SupportUtils.EFF_URL,
                         ),
                     )
 
diff -r 0c2c5365d46c mobile/android/fenix/app/src/main/java/org/mozilla/fenix/components/ReviewPromptController.kt
--- a/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/components/ReviewPromptController.kt	Mon Jul 15 14:24:25 2024 +0000
+++ b/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/components/ReviewPromptController.kt	Sat Jul 20 12:12:54 2024 +0000
@@ -6,8 +6,6 @@
 
 import android.app.Activity
 import androidx.annotation.VisibleForTesting
-import com.google.android.play.core.review.ReviewInfo
-import com.google.android.play.core.review.ReviewManager
 import kotlinx.coroutines.Dispatchers.Main
 import kotlinx.coroutines.withContext
 import org.mozilla.fenix.GleanMetrics.ReviewPrompt
@@ -45,24 +43,9 @@
  * Controls the Review Prompt behavior.
  */
 class ReviewPromptController(
-    private val manager: ReviewManager,
     private val reviewSettings: ReviewSettings,
     private val timeNowInMillis: () -> Long = { System.currentTimeMillis() },
-    private val tryPromptReview: suspend (Activity) -> Unit = { activity ->
-        val flow = manager.requestReviewFlow()
-
-        withContext(Main) {
-            flow.addOnCompleteListener {
-                if (it.isSuccessful) {
-                    manager.launchReviewFlow(activity, it.result)
-                    recordReviewPromptEvent(
-                        it.result.toString(),
-                        reviewSettings.numberOfAppLaunches,
-                        Date(),
-                    )
-                }
-            }
-        }
+    private val tryPromptReview: suspend (Activity) -> Unit = { _ ->
     },
 ) {
     @VisibleForTesting(otherwise = VisibleForTesting.PRIVATE)
diff -r 0c2c5365d46c mobile/android/fenix/app/src/main/java/org/mozilla/fenix/components/metrics/InstallReferrerMetricsService.kt
--- a/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/components/metrics/InstallReferrerMetricsService.kt	Mon Jul 15 14:24:25 2024 +0000
+++ b/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/components/metrics/InstallReferrerMetricsService.kt	Sat Jul 20 12:12:54 2024 +0000
@@ -6,14 +6,10 @@
 
 import android.content.Context
 import android.os.RemoteException
-import com.android.installreferrer.api.InstallReferrerClient
-import com.android.installreferrer.api.InstallReferrerStateListener
 import mozilla.components.support.base.log.logger.Logger
 import org.json.JSONException
 import org.json.JSONObject
 import org.mozilla.fenix.FeatureFlags
-import org.mozilla.fenix.GleanMetrics.MetaAttribution
-import org.mozilla.fenix.GleanMetrics.PlayStoreAttribution
 import org.mozilla.fenix.ext.settings
 import org.mozilla.fenix.utils.Settings
 import java.io.UnsupportedEncodingException
@@ -29,74 +25,13 @@
     private val logger = Logger("InstallReferrerMetricsService")
     override val type = MetricServiceType.Marketing
 
-    private var referrerClient: InstallReferrerClient? = null
-
     override fun start() {
         if (context.settings().utmParamsKnown) {
             return
         }
-
-        val timerId = PlayStoreAttribution.attributionTime.start()
-        val client = InstallReferrerClient.newBuilder(context).build()
-        referrerClient = client
-
-        client.startConnection(
-            object : InstallReferrerStateListener {
-                override fun onInstallReferrerSetupFinished(responseCode: Int) {
-                    PlayStoreAttribution.attributionTime.stopAndAccumulate(timerId)
-                    when (responseCode) {
-                        InstallReferrerClient.InstallReferrerResponse.OK -> {
-                            // Connection established.
-                            val installReferrerResponse = try {
-                                client.installReferrer.installReferrer
-                            } catch (e: RemoteException) {
-                                // We can't do anything about this.
-                                logger.error("Failed to retrieve install referrer response", e)
-                                null
-                            }
-
-                            if (installReferrerResponse.isNullOrBlank()) {
-                                return
-                            }
-
-                            PlayStoreAttribution.installReferrerResponse.set(installReferrerResponse)
-
-                            val utmParams = UTMParams.parseUTMParameters(installReferrerResponse)
-                            if (FeatureFlags.metaAttributionEnabled) {
-                                MetaParams.extractMetaAttribution(utmParams.content)
-                                    ?.recordMetaAttribution()
-                            }
-
-                            utmParams.recordInstallReferrer(context.settings())
-                            context.settings().utmParamsKnown = true
-                        }
-
-                        InstallReferrerClient.InstallReferrerResponse.FEATURE_NOT_SUPPORTED -> {
-                            // API not available on the current Play Store app.
-                            context.settings().utmParamsKnown = true
-                        }
-
-                        InstallReferrerClient.InstallReferrerResponse.SERVICE_UNAVAILABLE -> {
-                            // Connection couldn't be established.
-                        }
-                    }
-                    // End the connection, and null out the client.
-                    stop()
-                }
-
-                override fun onInstallReferrerServiceDisconnected() {
-                    // Try to restart the connection on the next request to
-                    // Google Play by calling the startConnection() method.
-                    referrerClient = null
-                }
-            },
-        )
     }
 
-    override fun stop() {
-        referrerClient?.endConnection()
-        referrerClient = null
-    }
+    override fun stop() { /* noop */ }
 
     override fun track(event: Event) = Unit
 
@@ -214,12 +149,6 @@
             return
         }
         intoSettings(settings)
-
-        PlayStoreAttribution.source.set(source)
-        PlayStoreAttribution.medium.set(medium)
-        PlayStoreAttribution.campaign.set(campaign)
-        PlayStoreAttribution.content.set(content)
-        PlayStoreAttribution.term.set(term)
     }
 }
 
@@ -314,9 +243,6 @@
      * record META attribution params to telemetry
      */
     fun recordMetaAttribution() {
-        MetaAttribution.app.set(app)
-        MetaAttribution.t.set(t)
-        MetaAttribution.data.set(data)
-        MetaAttribution.nonce.set(nonce)
+        return
     }
 }
diff -r 0c2c5365d46c mobile/android/fenix/app/src/main/java/org/mozilla/fenix/home/topsites/TopSiteItemViewHolder.kt
--- a/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/home/topsites/TopSiteItemViewHolder.kt	Mon Jul 15 14:24:25 2024 +0000
+++ b/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/home/topsites/TopSiteItemViewHolder.kt	Sat Jul 20 12:12:54 2024 +0000
@@ -162,6 +162,12 @@
                 SupportUtils.MEITUAN_URL -> {
                     binding.faviconImage.setImageDrawable(getDrawable(itemView.context, R.drawable.ic_meituan))
                 }
+                SupportUtils.FDROID_URL -> {
+                    binding.faviconImage.setImageDrawable(getDrawable(itemView.context, R.drawable.ic_fdroid))
+                }
+                SupportUtils.EFF_URL -> {
+                    binding.faviconImage.setImageDrawable(getDrawable(itemView.context, R.drawable.ic_eff))
+                }
                 else -> {
                     itemView.context.components.core.icons.loadIntoView(binding.faviconImage, topSite.url)
                 }
diff -r 0c2c5365d46c mobile/android/fenix/app/src/main/java/org/mozilla/fenix/settings/SupportUtils.kt
--- a/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/settings/SupportUtils.kt	Mon Jul 15 14:24:25 2024 +0000
+++ b/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/settings/SupportUtils.kt	Sat Jul 20 12:12:54 2024 +0000
@@ -38,6 +38,8 @@
     const val GOOGLE_US_URL = "https://www.google.com/webhp?client=firefox-b-1-m&channel=ts"
     const val GOOGLE_XX_URL = "https://www.google.com/webhp?client=firefox-b-m&channel=ts"
     const val WHATS_NEW_URL = "https://www.mozilla.org/firefox/android/notes"
+    const val FDROID_URL = "https://f-droid.org/"
+    const val EFF_URL = "https://www.eff.org/"
 
     // This is locale-less on purpose so that the content negotiation happens on the AMO side because the current
     // user language might not be supported by AMO and/or the language might not be exactly what AMO is expecting
diff -r 0c2c5365d46c mobile/android/fenix/app/src/main/java/org/mozilla/fenix/utils/Settings.kt
--- a/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/utils/Settings.kt	Mon Jul 15 14:24:25 2024 +0000
+++ b/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/utils/Settings.kt	Sat Jul 20 12:12:54 2024 +0000
@@ -340,17 +340,17 @@
 
     var isTelemetryEnabled by booleanPreference(
         appContext.getPreferenceKey(R.string.pref_key_telemetry),
-        default = true,
+        default = false,
     )
 
     var isMarketingTelemetryEnabled by booleanPreference(
         appContext.getPreferenceKey(R.string.pref_key_marketing_telemetry),
-        default = !Config.channel.isMozillaOnline,
+        default = false,
     )
 
     var isExperimentationEnabled by booleanPreference(
         appContext.getPreferenceKey(R.string.pref_key_experimentation),
-        default = true,
+        default = false,
     )
 
     var isOverrideTPPopupsForPerformanceTest = false
@@ -1629,7 +1629,7 @@
     var showPocketRecommendationsFeature by lazyFeatureFlagPreference(
         appContext.getPreferenceKey(R.string.pref_key_pocket_homescreen_recommendations),
         featureFlag = FeatureFlags.isPocketRecommendationsFeatureEnabled(appContext),
-        default = { homescreenSections[HomeScreenSection.POCKET] == true },
+        default = { false },
     )
 
     /**
@@ -1687,7 +1687,7 @@
      */
     var showContileFeature by booleanPreference(
         key = appContext.getPreferenceKey(R.string.pref_key_enable_contile),
-        default = true,
+        default = false,
     )
 
     /**
diff -r 0c2c5365d46c mobile/android/fenix/app/src/main/res/values/static_strings_extra.xml
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/mobile/android/fenix/app/src/main/res/values/static_strings_extra.xml	Sat Jul 20 12:12:54 2024 +0000
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="utf-8" standalone="yes"?>
+<!-- This Source Code Form is subject to the terms of the Mozilla Public
+   - License, v. 2.0. If a copy of the MPL was not distributed with this
+   - file, You can obtain one at http://mozilla.org/MPL/2.0/. -->
+<resources>
+    <string name="default_top_site_fdroid" translatable="false">F-Droid</string>
+    <string name="default_top_site_eff" translatable="false">EFF</string>
+</resources>
diff -r 0c2c5365d46c mobile/android/fenix/app/src/main/res/xml/preferences.xml
--- a/mobile/android/fenix/app/src/main/res/xml/preferences.xml	Mon Jul 15 14:24:25 2024 +0000
+++ b/mobile/android/fenix/app/src/main/res/xml/preferences.xml	Sat Jul 20 12:12:54 2024 +0000
@@ -139,11 +139,6 @@
             app:iconSpaceReserved="false"
             android:title="@string/preferences_notifications" />
 
-        <androidx.preference.Preference
-            android:key="@string/pref_key_data_choices"
-            app:iconSpaceReserved="false"
-            android:title="@string/preferences_data_collection" />
-
     </androidx.preference.PreferenceCategory>
 
     <PreferenceCategory
@@ -201,11 +196,6 @@
         app:iconSpaceReserved="false"
         android:layout="@layout/preference_category_no_icon_style">
         <androidx.preference.Preference
-            android:key="@string/pref_key_rate"
-            app:iconSpaceReserved="false"
-            android:title="@string/preferences_rate" />
-
-        <androidx.preference.Preference
             android:key="@string/pref_key_about"
             app:iconSpaceReserved="false"
             android:title="@string/preferences_about" />
diff -r 0c2c5365d46c mobile/android/fenix/app/src/main/res/xml/site_permissions_details_exceptions_preferences.xml
--- a/mobile/android/fenix/app/src/main/res/xml/site_permissions_details_exceptions_preferences.xml	Mon Jul 15 14:24:25 2024 +0000
+++ b/mobile/android/fenix/app/src/main/res/xml/site_permissions_details_exceptions_preferences.xml	Sat Jul 20 12:12:54 2024 +0000
@@ -3,7 +3,8 @@
    - License, v. 2.0. If a copy of the MPL was not distributed with this
    - file, You can obtain one at http://mozilla.org/MPL/2.0/. -->
 <androidx.preference.PreferenceScreen
-        xmlns:android="http://schemas.android.com/apk/res/android">
+        xmlns:android="http://schemas.android.com/apk/res/android"
+        xmlns:app="http://schemas.android.com/apk/res-auto">
     <androidx.preference.Preference
             android:icon="@drawable/ic_camera_enabled"
             android:key="@string/pref_key_phone_feature_camera"
@@ -44,7 +45,8 @@
         android:icon="@drawable/ic_link"
         android:key="@string/pref_key_browser_feature_media_key_system_access"
         android:title="@string/preference_phone_feature_media_key_system_access"
-        android:summary="@string/preference_option_phone_feature_ask_to_allow"/>
+        android:summary="@string/preference_option_phone_feature_ask_to_allow"
+        app:isPreferenceVisible="false"/>
 
     <androidx.preference.Preference
         android:icon="@drawable/ic_autoplay"
diff -r 0c2c5365d46c mobile/android/fenix/app/src/main/res/xml/site_permissions_preferences.xml
--- a/mobile/android/fenix/app/src/main/res/xml/site_permissions_preferences.xml	Mon Jul 15 14:24:25 2024 +0000
+++ b/mobile/android/fenix/app/src/main/res/xml/site_permissions_preferences.xml	Sat Jul 20 12:12:54 2024 +0000
@@ -64,6 +64,7 @@
         android:key="@string/pref_key_browser_feature_media_key_system_access"
         android:title="@string/preference_phone_feature_media_key_system_access"
         android:summary="@string/preference_option_phone_feature_ask_to_allow"
+        app:isPreferenceVisible="false"
         app:allowDividerBelow="true"/>
 
     <androidx.preference.Preference
diff -r 0c2c5365d46c mobile/android/fenix/plugins/fenixdependencies/src/main/java/FenixDependenciesPlugin.kt
--- a/mobile/android/fenix/plugins/fenixdependencies/src/main/java/FenixDependenciesPlugin.kt	Mon Jul 15 14:24:25 2024 +0000
+++ b/mobile/android/fenix/plugins/fenixdependencies/src/main/java/FenixDependenciesPlugin.kt	Sat Jul 20 12:12:54 2024 +0000
@@ -26,14 +26,9 @@
     const val androidx_viewpager2 = "1.1.0"
     const val google_accompanist = "0.32.0"
 
-    const val adjust = "4.38.2"
-    const val installreferrer = "2.2"
-
     const val junit = "5.10.2"
     const val mockk = "1.13.11"
 
-    const val google_ads_id_version = "16.0.0"
-
     // keep in sync with the versions used in AS.
     const val protobuf = "3.21.10"
     const val protobuf_plugin = "0.9.4"
@@ -58,9 +53,6 @@
     const val protobuf_javalite = "com.google.protobuf:protobuf-javalite:${FenixVersions.protobuf}"
     const val protobuf_compiler = "com.google.protobuf:protoc:${FenixVersions.protobuf}"
 
-    const val adjust = "com.adjust.sdk:adjust-android:${FenixVersions.adjust}"
-    const val installreferrer = "com.android.installreferrer:installreferrer:${FenixVersions.installreferrer}"
-
     const val mockk = "io.mockk:mockk:${FenixVersions.mockk}"
     const val mockk_android = "io.mockk:mockk-android:${FenixVersions.mockk}"
     const val falcon = "com.jraska:falcon:${FenixVersions.falcon}"
@@ -83,7 +75,7 @@
     // Test services is unused
     // --- END AndroidX test dependencies --- //
 
-    const val google_ads_id = "com.google.android.gms:play-services-ads-identifier:${FenixVersions.google_ads_id_version}"
+    const val google_ads_id = "org.microg.gms:play-services-ads-identifier:0.3.2.240913"
 
     const val junitApi = "org.junit.jupiter:junit-jupiter-api:${FenixVersions.junit}"
     const val junitParams = "org.junit.jupiter:junit-jupiter-params:${FenixVersions.junit}"
diff -r 0c2c5365d46c mobile/android/focus-android/app/build.gradle
--- a/mobile/android/focus-android/app/build.gradle	Mon Jul 15 14:24:25 2024 +0000
+++ b/mobile/android/focus-android/app/build.gradle	Sat Jul 20 12:12:54 2024 +0000
@@ -297,10 +297,6 @@
     implementation ComponentsDependencies.androidx_work_runtime
     implementation ComponentsDependencies.androidx_datastore_preferences
 
-    // Required for in-app reviews
-    implementation ComponentsDependencies.play_review
-    implementation ComponentsDependencies.play_review_ktx
-
     implementation ComponentsDependencies.google_material
 
     implementation ComponentsDependencies.thirdparty_sentry
